version: "3.7"

services:

    database:
        container_name: database
        build:
            context: .
            dockerfile: Dockerfile.db
            args:
                # Image build arguments.
                # You should already have run previously: source .env
                - POSTGRES_USER=${POSTGRES_USER}
                - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        restart: always
        ports:
            - '5432:5432'
        environment:
            # Container run-time arguments
            # You should already have run previously: source .env
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        volumes:
            - ./data/postgres:/var/lib/postgresql/data

    #database_migration:
        #container_name: database_migration
        #image: flyway/flyway:latest
        #environment:
            # Container run-time arguments
            # You should already have run previously: source .env
            #- POSTGRES_DBASE=${POSTGRES_DBASE}
            #- POSTGRES_USER=${POSTGRES_USER}
            #- POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            #- FLYWAY_USER=${POSTGRES_USER}
            #- FLYWAY_PASSWORD=${POSTGRES_PASSWORD}
            #- FLYWAY_URL=jdbc:postgresql://database:5432/${POSTGRES_DBASE}
            #- FLYWAY_BASELINE_ON_MIGRATE=true
            #- FLYWAY_PLACEHOLDER_REPLACEMENT=false
        #command: -locations=filesystem:/flyway/sql -connectRetries=120 migrate
        #volumes:
            #- ../modality-base/modality-base-server-datasource/src/main/resources/db:/flyway/sql
        #depends_on:
            #- database

    #session:
        #container_name: session
        #image: redis:6.2.6-alpine
        #restart: always
        #ports:
            #- '6379:6379'
        #command: redis-server --save 60 1 --loglevel warning
